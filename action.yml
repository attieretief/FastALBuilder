# action.yaml
name: 'Fast AL Builder'
description: 'Github Action to build AL Extensions quickly.'
author: 'Attie Retief'
branding:
  icon: 'package'
  color: 'blue'
inputs: 
  azure_connection_string:
    description: 'Azure Storage Account Connection String'
    required: true
  container_name:
    description: 'Azure Storage Account Container Name'
    required: true
  al_blob_name:
    description: 'AL Compiler Blob Name'
    required: true
  azure_key_vault_uri:
    description: 'Azure Key Vault URI'
    required: true
  azure_key_vault_certificate_name:
    description: 'Azure Key Vault Certificate Name'
    required: true
  azure_key_vault_application_id:
    description: 'Azure Key Vault Application ID'
    required: true
  azure_key_vault_application_secret:
    description: 'Azure Key Vault Application Secret'
    required: true
  azure_key_vault_tenant_id:
    description: 'Azure Key Vault Tenant ID'
    required: true

  
runs:
  using: 'composite'
  steps:
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    - name: Install python dependencies
      uses: py-actions/py-dependency-install@v4
    - name: Install Code Signing Tool
      run: |
        sudo apt-get update
        sudo apt-get install -y osslsigncode
      shell: bash
    - name: Install dotnet Framework
      uses: actions/setup-dotnet@v4
    - name: Install AzureSignTool
      run: |
        mkdir -p $HOME/.dotnet/tools
        export PATH="$PATH:$HOME/.dotnet/tools"
        dotnet tool install -g AzureSignTool
      shell: bash
    - name: Pass Inputs to Shell Environment Variables
      run: |
        echo "export AZ_CONNECTION_STRING='${{ inputs.azure_connection_string }}'" >> $GITHUB_ENV
        echo "export AZ_CONTAINER_NAME_TOOLS='${{ inputs.container_name }}'" >> $GITHUB_ENV
        echo "export AZ_ALC_FILENAME='${{ inputs.al_blob_name }}'" >> $GITHUB_ENV
        echo "export AZ_KEY_VAULT_URI='${{ inputs.azure_key_vault_uri }}'" >> $GITHUB_ENV
        echo "export AZ_KEY_VAULT_CERTIFICATE_NAME='${{ inputs.azure_key_vault_certificate_name }}'" >> $GITHUB_ENV
        echo "export AZ_KEY_VAULT_APPLICATION_ID='${{ inputs.azure_key_vault_application_id }}'" >> $GITHUB_ENV
        echo "export AZ_KEY_VAULT_APPLICATION_SECRET='${{ inputs.azure_key_vault_application_secret }}'" >> $GITHUB_ENV
        echo "export AZ_KEY_VAULT_TENANT_ID='${{ inputs.azure_key_vault_tenant_id }}'" >> $GITHUB_ENV
      shell: bash
    - name: Setup AL Compiler
      run: |
        python src/getAL.py
      shell: bash
    - name: Build AL Extension(s)
      run: |
        python src/build.py -r '${{ github.event.repository.name }}' -e  '${{ github.event_name }}' -c '${{ github.sha }}'
      shell: bash